//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventeterAppAlpha.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EventsterDBEntities : DbContext
    {
        public EventsterDBEntities()
            : base("name=EventsterDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Sport> Sports { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
        public virtual DbSet<Userdata> Userdatas { get; set; }
    
        public virtual ObjectResult<GetCountDistinctLocations_Result> GetCountDistinctLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountDistinctLocations_Result>("GetCountDistinctLocations");
        }
    
        public virtual ObjectResult<GetCountOfEvents_Result> GetCountOfEvents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountOfEvents_Result>("GetCountOfEvents");
        }
    
        public virtual ObjectResult<GetCountTeams_Result> GetCountTeams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountTeams_Result>("GetCountTeams");
        }
    
        public virtual ObjectResult<GetCountUsers_Result> GetCountUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountUsers_Result>("GetCountUsers");
        }
    
        public virtual ObjectResult<GetDistinctCount_Result> GetDistinctCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistinctCount_Result>("GetDistinctCount");
        }
    
        public virtual int spInnerJoinEvent_and_Location()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInnerJoinEvent_and_Location");
        }
    
        public virtual int spInnerJoinEvent_and_User()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInnerJoinEvent_and_User");
        }
    
        public virtual int spInnerJoinSport_and_Location()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInnerJoinSport_and_Location");
        }
    
        public virtual int spLeftOuterJoinSport_Team()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLeftOuterJoinSport_Team");
        }
    
        public virtual ObjectResult<spLeftOuterJoinUser_Team_Result> spLeftOuterJoinUser_Team()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLeftOuterJoinUser_Team_Result>("spLeftOuterJoinUser_Team");
        }
    
        public virtual int spRightOuterJoinTeam_Event()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRightOuterJoinTeam_Event");
        }
    
        public virtual ObjectResult<spUserList_Result> spUserList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUserList_Result>("spUserList");
        }
    
        public virtual int spUpdateEvent(string eventTitle, string hostName, Nullable<System.DateTime> eventDate, string phoneNumber, string description, string email)
        {
            var eventTitleParameter = eventTitle != null ?
                new ObjectParameter("EventTitle", eventTitle) :
                new ObjectParameter("EventTitle", typeof(string));
    
            var hostNameParameter = hostName != null ?
                new ObjectParameter("HostName", hostName) :
                new ObjectParameter("HostName", typeof(string));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("EventDate", eventDate) :
                new ObjectParameter("EventDate", typeof(System.DateTime));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateEvent", eventTitleParameter, hostNameParameter, eventDateParameter, phoneNumberParameter, descriptionParameter, emailParameter);
        }
    }
}
